{"ast":null,"code":"class Api {\n  constructor({\n    url,\n    headers\n  }) {\n    this._url = url;\n    this._headers = headers;\n    this._responseProcessing = this._responseProcessing.bind(this);\n    this.getUserInfo = this.getUserInfo.bind(this);\n  } // Обработка ответа сервера\n\n\n  _responseProcessing(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(res.statusText);\n  } // Обновить фото пользователя\n\n\n  updatePhoto(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._responseProcessing(res);\n    });\n  } // Запросить информацию о пользователе\n\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._responseProcessing(res);\n    });\n  } // Обновить информацию о пользователе\n\n\n  editUserDesc(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._responseProcessing(res);\n    });\n  } // Обновить аватар\n\n\n  editUserAvatar(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._responseProcessing(res);\n    });\n  } // Запросить карточки \n\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._responseProcessing(res);\n    });\n  } // Загрузить карточку на сервер\n\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._responseProcessing(res);\n    });\n  } // Удалить карточку\n\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._responseProcessing(res);\n    });\n  } // Поставить лайк\n\n\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => {\n      return this._responseProcessing(res);\n    });\n  } //  Удалить лайк\n\n\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._responseProcessing(res);\n    });\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: '59fccf9e-6799-435b-80d6-745d3115e9a3',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/boev/Desktop/Яндекс.Практикум/10 спринт/mesto-react/src/utils/api.js"],"names":["Api","constructor","url","headers","_url","_headers","_responseProcessing","bind","getUserInfo","res","ok","json","Promise","reject","statusText","updatePhoto","data","fetch","method","body","JSON","stringify","then","editUserDesc","editUserAvatar","getInitialCards","addCard","deleteCard","cardId","putLike","removeLike","api","baseUrl","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n    this._responseProcessing = this._responseProcessing.bind(this);\n    this.getUserInfo = this.getUserInfo.bind(this);\n  }\n\n  // Обработка ответа сервера\n  _responseProcessing(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.statusText);\n  }\n\n  // Обновить фото пользователя\n  updatePhoto(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) => {\n      return this._responseProcessing(res);\n    });\n  }\n\n  // Запросить информацию о пользователе\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._responseProcessing(res);\n    });\n  }\n\n  // Обновить информацию о пользователе\n  editUserDesc(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) => {\n      return this._responseProcessing(res);\n    });\n  }\n\n  // Обновить аватар\n  editUserAvatar(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) => {\n      return this._responseProcessing(res);\n    });\n  }\n\n  // Запросить карточки \n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._responseProcessing(res);\n    });\n  }\n\n  // Загрузить карточку на сервер\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) => {\n      return this._responseProcessing(res);\n    });\n  }\n\n  // Удалить карточку\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._responseProcessing(res);\n    });\n  }\n\n  // Поставить лайк\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._responseProcessing(res);\n    });\n  }\n\n  //  Удалить лайк\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._responseProcessing(res);\n    });\n  }\n}\n\nexport const api = new Api ({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: '59fccf9e-6799-435b-80d6-745d3115e9a3',\n    'Content-Type': 'application/json'\n  }\n});"]},"metadata":{},"sourceType":"module"}