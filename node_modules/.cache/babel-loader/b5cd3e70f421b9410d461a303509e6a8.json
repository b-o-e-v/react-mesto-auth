{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._url = url;\n    this._headers = headers;\n  } // Обработка ответа сервера\n\n\n  _getStatus(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error! : ${res.status}`);\n    }\n  }\n\n  getServerData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  } // Обновить фото пользователя\n\n\n  updatePhoto(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._getStatus);\n  } // Запросить информацию о пользователе\n\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._getStatus);\n  } // Обновить информацию о пользователе\n\n\n  editUserDesc(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._getStatus);\n  } // Обновить аватар\n\n\n  editUserAvatar(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._getStatus);\n  } // Запросить карточки \n\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._getStatus);\n  } // Загрузить карточку на сервер\n\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._getStatus);\n  } // Удалить карточку\n\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getStatus);\n  } // Поставить лайк\n\n\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._getStatus);\n  } //  Удалить лайк\n\n\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getStatus);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: '59fccf9e-6799-435b-80d6-745d3115e9a3',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/boev/Desktop/Яндекс.Практикум/10 спринт/mesto-react/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","_url","url","_headers","_getStatus","res","ok","json","Promise","reject","status","getServerData","all","getUserInfo","getInitialCards","updatePhoto","data","fetch","method","body","JSON","stringify","then","_baseUrl","editUserDesc","editUserAvatar","addCard","deleteCard","cardId","putLike","removeLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  // Обработка ответа сервера\n  _getStatus(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error! : ${res.status}`);\n    }\n  }\n\n  getServerData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()])\n  }\n\n  // Обновить фото пользователя\n  updatePhoto(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Запросить информацию о пользователе\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  // Обновить информацию о пользователе\n  editUserDesc(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Обновить аватар\n  editUserAvatar(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Запросить карточки \n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  // Загрузить карточку на сервер\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Удалить карточку\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  // Поставить лайк\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  //  Удалить лайк\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n}\n\nexport const api = new Api ({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: '59fccf9e-6799-435b-80d6-745d3115e9a3',\n    'Content-Type': 'application/json'\n  }\n});"]},"metadata":{},"sourceType":"module"}