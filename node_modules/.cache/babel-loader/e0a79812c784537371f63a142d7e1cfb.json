{"ast":null,"code":"var _jsxFileName = \"/Users/boev/Desktop/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/10 \\u0441\\u043F\\u0440\\u0438\\u043D\\u0442/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectedCard, setSelectedCard] = useState({\n    name: '',\n    link: ''\n  });\n  const [cards, setCards] = useState([]);\n  const [isSubmitForm, setIsSubmitForm] = useState(false);\n  useEffect(() => {\n    api.getServerData().then(([userData, initialCards]) => {\n      setCurrentUser(userData);\n      setCards(initialCards);\n    }).catch(error => console.log(error));\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteCardClick() {\n    setIsDeleteCardPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n  }\n\n  function handleLikeCard(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.likeCard(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(error => console.log(error));\n  }\n\n  function handleDeleteCard(card) {\n    setIsSubmitForm(true);\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n      closeAllPopups();\n      setIsSubmitForm(false);\n    }).catch(error => {\n      console.log(error);\n      setIsSubmitForm(false);\n    });\n  }\n\n  function handleUpdateUser(data) {\n    setIsSubmitForm(true);\n    api.setUserInfo(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n      setIsSubmitForm(false);\n    }).catch(error => {\n      console.log(error);\n      setIsSubmitForm(false);\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    setIsSubmitForm(true);\n    api.updateAvatar(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n      setIsSubmitForm(false);\n    }).catch(error => {\n      console.log(error);\n      setIsSubmitForm(false);\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    setIsSubmitForm(true);\n    api.addCard(card).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n      setIsSubmitForm(false);\n    }).catch(error => {\n      console.log(error);\n      setIsSubmitForm(false);\n    });\n  }\n\n  function handleClickDelete(e) {\n    e.preventDefault();\n    handleDeleteCard(selectedCard);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onOpenImage: setIsImagePopupOpen,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: setSelectedCard,\n        onCardDeletePopupOpen: handleDeleteCardClick,\n        onCardLike: handleLikeCard,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateProfile: handleUpdateUser,\n        isSubmitForm: isSubmitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit,\n        isSubmitForm: isSubmitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        isSubmitForm: isSubmitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        name: \"delete\",\n        buttonText: isSubmitForm ? 'Удаление...' : 'Да',\n        isOpen: isDeleteCardPopupOpen,\n        onClose: closeAllPopups,\n        onSubmit: handleClickDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isImagePopupOpen,\n        isClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mF3RuQu5NS1EJOMvQfhmiqoMmec=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/boev/Desktop/Яндекс.Практикум/10 спринт/mesto-react/src/components/App.js"],"names":["useState","useEffect","Header","Main","Footer","PopupWithForm","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ImagePopup","CurrentUserContext","api","App","isImagePopupOpen","setIsImagePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","currentUser","setCurrentUser","selectedCard","setSelectedCard","name","link","cards","setCards","isSubmitForm","setIsSubmitForm","getServerData","then","userData","initialCards","catch","error","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteCardClick","closeAllPopups","handleLikeCard","card","isLiked","likes","some","i","_id","likeCard","newCard","newCards","map","c","handleDeleteCard","deleteCard","filter","handleUpdateUser","data","setUserInfo","res","handleUpdateAvatar","updateAvatar","handleAddPlaceSubmit","addCard","handleClickDelete","e","preventDefault"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\n\nimport PopupWithForm from './PopupWithForm'\nimport EditProfilePopup from './EditProfilePopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport ImagePopup from './ImagePopup'\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nimport { api } from '../utils/api'\n\nexport default function App() {\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false)\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false)\n\n  const [currentUser, setCurrentUser] = useState({})\n  const [selectedCard, setSelectedCard] = useState({ name: '', link: '' })\n  const [cards, setCards] = useState([])\n\n  const [isSubmitForm, setIsSubmitForm] = useState(false)\n\n  useEffect(() => {\n    api\n      .getServerData()\n      .then(([userData, initialCards]) => {\n        setCurrentUser(userData)\n        setCards(initialCards)\n      })\n      .catch((error) => console.log(error))\n  }, [])\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleDeleteCardClick() {\n    setIsDeleteCardPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsDeleteCardPopupOpen(false)\n    setIsImagePopupOpen(false)\n    setSelectedCard({ name: '', link: '' })\n  }\n\n  function handleLikeCard(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id)\n\n    api\n      .likeCard(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c))\n        setCards(newCards)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function handleDeleteCard(card) {\n    setIsSubmitForm(true)\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id)\n        setCards(newCards)\n        closeAllPopups()\n        setIsSubmitForm(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setIsSubmitForm(false)\n      })\n  }\n\n  function handleUpdateUser(data) {\n    setIsSubmitForm(true)\n    api\n      .setUserInfo(data)\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups()\n        setIsSubmitForm(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setIsSubmitForm(false)\n      })\n  }\n\n  function handleUpdateAvatar(data) {\n    setIsSubmitForm(true)\n    api\n      .updateAvatar(data)\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups()\n        setIsSubmitForm(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setIsSubmitForm(false)\n      })\n  }\n\n  function handleAddPlaceSubmit(card) {\n    setIsSubmitForm(true)\n    api\n      .addCard(card)\n      .then((res) => {\n        setCards([res, ...cards])\n        closeAllPopups()\n        setIsSubmitForm(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setIsSubmitForm(false)\n      })\n  }\n\n  function handleClickDelete(e) {\n    e.preventDefault()\n    handleDeleteCard(selectedCard)\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <Header />\n        <Main\n          onOpenImage={setIsImagePopupOpen}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={setSelectedCard}\n          onCardDeletePopupOpen={handleDeleteCardClick}\n          onCardLike={handleLikeCard}\n          cards={cards}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateProfile={handleUpdateUser}\n          isSubmitForm={isSubmitForm}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isSubmitForm={isSubmitForm}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isSubmitForm={isSubmitForm}\n        />\n        <PopupWithForm\n          title='Вы уверены?'\n          name='delete'\n          buttonText={isSubmitForm ? 'Удаление...' : 'Да'}\n          isOpen={isDeleteCardPopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleClickDelete}\n        />\n        <ImagePopup\n          card={selectedCard}\n          isOpen={isImagePopupOpen}\n          isClose={closeAllPopups}\n        />\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}