{"ast":null,"code":"var _jsxFileName = \"/Users/boev/Desktop/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/10 \\u0441\\u043F\\u0440\\u0438\\u043D\\u0442/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Main from \"./Main\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { api } from \"../utils/api\";\nimport { CurrentUserContext } from '../context/CurrentUserContext';\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from './EditProfilePopup';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(\"\");\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getServerData().then(([userData, initialCards]) => {\n      setCurrentUser(userData);\n      setCards(initialCards);\n    }).catch(error => console.log(error));\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard('');\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateAvatar(data) {\n    api.changeAvatar(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(error => console.log(error));\n  }\n\n  function handleUpdateUser(data) {\n    api.setUserInfo(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(error => console.log(error));\n  }\n\n  function handleDeleteCard(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    }).catch(error => console.log(error));\n  }\n\n  function handleLikeCard(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.likeCard(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(error => console.log(error));\n  }\n\n  function handleAddPlaceSubmit(item) {\n    api.createCard(item).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(error => console.log(error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleLikeCard,\n          onCardDelete: handleDeleteCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateProfile: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          name: \"form-confirm\",\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          isClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u3/xGDWcPwXd8Q3E6tJ5w9wdqn4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/boev/Desktop/Яндекс.Практикум/10 спринт/mesto-react/src/components/App.js"],"names":["useState","useEffect","Main","Header","Footer","ImagePopup","AddPlacePopup","api","CurrentUserContext","EditAvatarPopup","EditProfilePopup","PopupWithForm","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","getServerData","then","userData","initialCards","catch","error","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","handleCardClick","card","handleUpdateAvatar","data","changeAvatar","res","handleUpdateUser","setUserInfo","handleDeleteCard","deleteCard","_id","newCards","filter","c","handleLikeCard","isLiked","likes","some","i","likeCard","newCard","map","handleAddPlaceSubmit","item","createCard"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Main from \"./Main\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport {api} from \"../utils/api\";\nimport {CurrentUserContext} from '../context/CurrentUserContext'\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from './EditProfilePopup'\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(\"\");\n  const [currentUser, setCurrentUser] = useState({})\n  const [cards, setCards] = useState([])\n\n  useEffect(() => {\n    api.getServerData()\n      .then(([userData, initialCards]) => {\n      setCurrentUser(userData)\n      setCards(initialCards);\n    })\n      .catch(error => console.log(error))\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard('');\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateAvatar(data) {\n    api.changeAvatar(data)\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch(error => console.log(error))\n  }\n\n  function handleUpdateUser(data) {\n    api.setUserInfo(data)\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch(error => console.log(error))\n  }\n\n  function handleDeleteCard(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id)\n        setCards(newCards)\n      })\n      .catch(error => console.log(error))\n  }\n\n  function handleLikeCard(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id)\n\n    api.likeCard(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c)\n        setCards(newCards)\n      })\n      .catch(error => console.log(error))\n  }\n\n  function handleAddPlaceSubmit(item) {\n    api.createCard(item)\n      .then((res) => {\n        setCards([res, ...cards])\n        closeAllPopups()\n      })\n      .catch(error => console.log(error))\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"root\">\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleLikeCard}\n          onCardDelete={handleDeleteCard}\n        />\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateProfile={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <PopupWithForm\n          title=\"Вы уверены?\"\n          name=\"form-confirm\"\n          onClose={closeAllPopups}>\n\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          isClose={closeAllPopups}\n        />\n      </div>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}