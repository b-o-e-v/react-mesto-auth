{"ast":null,"code":"class Api {\n  constructor({\n    url,\n    headers\n  }) {\n    this._url = url;\n    this._headers = headers;\n  } // Обработка ответа сервера\n\n\n  _getStatus(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error! : ${res.status}`);\n    }\n  }\n\n  getServerData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  } // Обновить фото пользователя\n\n\n  updateAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar.avatar\n      })\n    }).then(this._getStatus);\n  } // Запросить информацию о пользователе\n\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(this._getStatus);\n  } // Обновить информацию о пользователе\n\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._getStatus);\n  } // Обновить аватар\n\n\n  editUserAvatar(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._getStatus);\n  } // Запросить карточки \n\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._getStatus);\n  } // Загрузить карточку на сервер\n\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._getStatus);\n  } // Удалить карточку\n\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getStatus);\n  } // Лайк карточки\n\n\n  likeCard(id, like) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(this._getStatus);\n  }\n\n}\n\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: '59fccf9e-6799-435b-80d6-745d3115e9a3',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/boev/Desktop/Яндекс.Практикум/10 спринт/mesto-react/src/utils/api.js"],"names":["Api","constructor","url","headers","_url","_headers","_getStatus","res","ok","json","Promise","reject","status","getServerData","all","getUserInfo","getInitialCards","updateAvatar","data","fetch","method","body","JSON","stringify","avatar","then","setUserInfo","name","about","editUserAvatar","addCard","deleteCard","cardId","likeCard","id","like","api","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,EAAmB;AAC5B,SAAKC,IAAL,GAAYF,GAAZ;AACA,SAAKG,QAAL,GAAgBF,OAAhB;AACD,GAJO,CAMR;;;AACAG,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAgB,YAAWJ,GAAG,CAACK,MAAO,EAAtC,CAAP;AACD;AACF;;AAEDC,EAAAA,aAAa,GAAG;AACd,WAAOH,OAAO,CAACI,GAAR,CAAY,CAAC,KAAKC,WAAL,EAAD,EAAqB,KAAKC,eAAL,EAArB,CAAZ,CAAP;AACD,GAjBO,CAmBR;;;AACAC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,WAAOC,KAAK,CAAE,GAAE,KAAKf,IAAK,kBAAd,EAAiC;AAC3CgB,MAAAA,MAAM,EAAE,OADmC;AAE3CjB,MAAAA,OAAO,EAAE,KAAKE,QAF6B;AAG3CgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAEA,MAAM,CAACA;AADI,OAAf;AAHqC,KAAjC,CAAL,CAMJC,IANI,CAMC,KAAKnB,UANN,CAAP;AAOD,GA5BO,CA8BR;;;AACAS,EAAAA,WAAW,GAAG;AACZ,WAAOI,KAAK,CAAE,GAAE,KAAKf,IAAK,WAAd,EAA0B;AACpCD,MAAAA,OAAO,EAAE,KAAKE;AADsB,KAA1B,CAAL,CAEJoB,IAFI,CAEC,KAAKnB,UAFN,CAAP;AAGD,GAnCO,CAqCR;;;AACAoB,EAAAA,WAAW,CAACR,IAAD,EAAO;AAChB,WAAOC,KAAK,CAAE,GAAE,KAAKf,IAAK,WAAd,EAA0B;AACpCgB,MAAAA,MAAM,EAAE,OAD4B;AAEpCjB,MAAAA,OAAO,EAAE,KAAKE,QAFsB;AAGpCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBI,QAAAA,IAAI,EAAET,IAAI,CAACS,IADQ;AAEnBC,QAAAA,KAAK,EAAEV,IAAI,CAACU;AAFO,OAAf;AAH8B,KAA1B,CAAL,CAOJH,IAPI,CAOC,KAAKnB,UAPN,CAAP;AAQD,GA/CO,CAiDR;;;AACAuB,EAAAA,cAAc,CAACX,IAAD,EAAO;AACnB,WAAOC,KAAK,CAAE,GAAE,KAAKf,IAAK,WAAd,EAA0B;AACpCgB,MAAAA,MAAM,EAAE,OAD4B;AAEpCjB,MAAAA,OAAO,EAAE,KAAKE,QAFsB;AAGpCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAH8B,KAA1B,CAAL,CAIJO,IAJI,CAIC,KAAKnB,UAJN,CAAP;AAKD,GAxDO,CA0DR;;;AACAU,EAAAA,eAAe,GAAG;AAChB,WAAOG,KAAK,CAAE,GAAE,KAAKf,IAAK,QAAd,EAAuB;AACjCgB,MAAAA,MAAM,EAAE,KADyB;AAEjCjB,MAAAA,OAAO,EAAE,KAAKE;AAFmB,KAAvB,CAAL,CAGJoB,IAHI,CAGC,KAAKnB,UAHN,CAAP;AAID,GAhEO,CAkER;;;AACAwB,EAAAA,OAAO,CAACZ,IAAD,EAAO;AACZ,WAAOC,KAAK,CAAE,GAAE,KAAKf,IAAK,QAAd,EAAuB;AACjCgB,MAAAA,MAAM,EAAE,MADyB;AAEjCjB,MAAAA,OAAO,EAAE,KAAKE,QAFmB;AAGjCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAH2B,KAAvB,CAAL,CAIJO,IAJI,CAIC,KAAKnB,UAJN,CAAP;AAKD,GAzEO,CA2ER;;;AACAyB,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB,WAAOb,KAAK,CAAE,GAAE,KAAKf,IAAK,UAAS4B,MAAO,EAA9B,EAAiC;AAC3CZ,MAAAA,MAAM,EAAE,QADmC;AAE3CjB,MAAAA,OAAO,EAAE,KAAKE;AAF6B,KAAjC,CAAL,CAGJoB,IAHI,CAGC,KAAKnB,UAHN,CAAP;AAID,GAjFO,CAmFR;;;AACA2B,EAAAA,QAAQ,CAACC,EAAD,EAAKC,IAAL,EAAW;AACjB,WAAOhB,KAAK,CAAE,GAAE,KAAKf,IAAK,gBAAe8B,EAAG,EAAhC,EAAmC;AAC7Cd,MAAAA,MAAM,EAAEe,IAAI,GAAG,KAAH,GAAW,QADsB;AAE7ChC,MAAAA,OAAO,EAAE,KAAKE;AAF+B,KAAnC,CAAL,CAGJoB,IAHI,CAGC,KAAKnB,UAHN,CAAP;AAID;;AAzFO;;AA4FV,OAAO,MAAM8B,GAAG,GAAG,IAAIpC,GAAJ,CAAS;AAC1BE,EAAAA,GAAG,EAAE,6CADqB;AAE1BC,EAAAA,OAAO,EAAE;AACPkC,IAAAA,aAAa,EAAE,sCADR;AAEP,oBAAgB;AAFT;AAFiB,CAAT,CAAZ","sourcesContent":["class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  // Обработка ответа сервера\n  _getStatus(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error! : ${res.status}`);\n    }\n  }\n\n  getServerData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()])\n  }\n\n  // Обновить фото пользователя\n  updateAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar.avatar\n      }),\n    }).then(this._getStatus);\n  }\n\n  // Запросить информацию о пользователе\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  // Обновить информацию о пользователе\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then(this._getStatus);\n  }\n\n  // Обновить аватар\n  editUserAvatar(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Запросить карточки \n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  // Загрузить карточку на сервер\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Удалить карточку\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  // Лайк карточки\n  likeCard(id, like) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n}\n\nexport const api = new Api ({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: '59fccf9e-6799-435b-80d6-745d3115e9a3',\n    'Content-Type': 'application/json'\n  }\n});"]},"metadata":{},"sourceType":"module"}