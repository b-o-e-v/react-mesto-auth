{"ast":null,"code":"import _classCallCheck from\"/Users/boev/Desktop/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/10 \\u0441\\u043F\\u0440\\u0438\\u043D\\u0442/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/boev/Desktop/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/10 \\u0441\\u043F\\u0440\\u0438\\u043D\\u0442/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(_ref){var url=_ref.url,headers=_ref.headers;_classCallCheck(this,Api);this._url=url;this._headers=headers;}// Обработка ответа сервера\n_createClass(Api,[{key:\"_getStatus\",value:function _getStatus(res){if(res.ok){return res.json();}else{return Promise.reject(\"Error! : \".concat(res.status));}}},{key:\"getServerData\",value:function getServerData(){return Promise.all([this.getUserInfo(),this.getInitialCards()]);}// Обновить фото пользователя\n},{key:\"updatePhoto\",value:function updatePhoto(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify(data)}).then(this._getStatus);}// Запросить информацию о пользователе\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(this._getStatus);}// Обновить информацию о пользователе\n},{key:\"editUserDesc\",value:function editUserDesc(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify(data)}).then(this._getStatus);}// Обновить аватар\n},{key:\"editUserAvatar\",value:function editUserAvatar(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify(data)}).then(this._getStatus);}// Запросить карточки \n},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"GET\",headers:this._headers}).then(this._getStatus);}// Загрузить карточку на сервер\n},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify(data)}).then(this._getStatus);}// Удалить карточку\n},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._getStatus);}// Поставить лайк\n},{key:\"putLike\",value:function putLike(cardId){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:\"PUT\",headers:this._headers}).then(this._getStatus);}//  Удалить лайк\n},{key:\"removeLike\",value:function removeLike(cardId){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._getStatus);}}]);return Api;}();export var api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-23',headers:{authorization:'59fccf9e-6799-435b-80d6-745d3115e9a3','Content-Type':'application/json'}});","map":{"version":3,"sources":["/Users/boev/Desktop/Яндекс.Практикум/10 спринт/mesto-react/src/utils/api.js"],"names":["Api","url","headers","_url","_headers","res","ok","json","Promise","reject","status","all","getUserInfo","getInitialCards","data","fetch","method","body","JSON","stringify","then","_getStatus","cardId","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  // Обработка ответа сервера\n  _getStatus(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error! : ${res.status}`);\n    }\n  }\n\n  getServerData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()])\n  }\n\n  // Обновить фото пользователя\n  updatePhoto(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Запросить информацию о пользователе\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  // Обновить информацию о пользователе\n  editUserDesc(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Обновить аватар\n  editUserAvatar(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Запросить карточки \n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  // Загрузить карточку на сервер\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getStatus);\n  }\n\n  // Удалить карточку\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  // Поставить лайк\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n\n  //  Удалить лайк\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getStatus);\n  }\n}\n\nexport const api = new Api ({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: '59fccf9e-6799-435b-80d6-745d3115e9a3',\n    'Content-Type': 'application/json'\n  }\n});"]},"metadata":{},"sourceType":"module"}