{"ast":null,"code":"var _jsxFileName = \"/Users/boev/Desktop/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/10 \\u0441\\u043F\\u0440\\u0438\\u043D\\u0442/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectedCard, setSelectedCard] = useState({\n    name: '',\n    link: ''\n  });\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getServerData().then(([userData, initialCards]) => {\n      setCurrentUser(userData);\n      setCards(initialCards);\n    }).catch(error => console.log(error));\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteCardClick() {\n    setIsDeleteCardPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleLikeCard(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.likeCard(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(error => console.log(error));\n  }\n\n  function handleDeleteCard(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    }).catch(error => console.log(error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        onCardDeletePopupOpen: handleDeleteCardClick,\n        onCardLike: handleLikeCard,\n        onCardDelete: handleDeleteCard,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        name: \"delete\",\n        buttonText: \"\\u0414\\u0430\",\n        isOpen: isDeleteCardPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GwMjLjlVsn0ILWmZXnYzvc0VEIc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/boev/Desktop/Яндекс.Практикум/10 спринт/mesto-react/src/components/App.js"],"names":["useState","useEffect","Header","Main","Footer","PopupWithForm","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ImagePopup","CurrentUserContext","api","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","currentUser","setCurrentUser","selectedCard","setSelectedCard","name","link","cards","setCards","getServerData","then","userData","initialCards","catch","error","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteCardClick","closeAllPopups","handleCardClick","card","handleLikeCard","isLiked","likes","some","i","_id","likeCard","newCard","newCards","map","c","handleDeleteCard","deleteCard","filter"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\n\nimport PopupWithForm from './PopupWithForm'\nimport EditProfilePopup from './EditProfilePopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport ImagePopup from './ImagePopup'\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nimport { api } from '../utils/api'\n\nexport default function App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false)\n  const [currentUser, setCurrentUser] = useState({})\n  const [selectedCard, setSelectedCard] = useState({name: '', link: ''})\n  const [cards, setCards] = useState([])\n\n  useEffect(() => {\n    api.getServerData()\n      .then(([userData, initialCards]) => {\n      setCurrentUser(userData)\n      setCards(initialCards);\n    })\n      .catch(error => console.log(error))\n  }, []);\n\n  \n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleDeleteCardClick() {\n    setIsDeleteCardPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsDeleteCardPopupOpen(false)\n    setSelectedCard({name: '', link: ''})\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function handleLikeCard(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id)\n\n    api.likeCard(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c)\n        setCards(newCards)\n      })\n      .catch(error => console.log(error))\n  }\n\n  function handleDeleteCard(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id)\n        setCards(newCards)\n      })\n      .catch(error => console.log(error))\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          onCardDeletePopupOpen={handleDeleteCardClick}\n          onCardLike={handleLikeCard}\n          onCardDelete={handleDeleteCard}\n          cards={cards}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <PopupWithForm\n          title='Вы уверены?'\n          name='delete'\n          buttonText='Да'\n          isOpen={isDeleteCardPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <ImagePopup card={selectedCard} isClose={closeAllPopups} />\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}