{"ast":null,"code":"import _classCallCheck from\"/Users/boev/Desktop/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/10 \\u0441\\u043F\\u0440\\u0438\\u043D\\u0442/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/boev/Desktop/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/10 \\u0441\\u043F\\u0440\\u0438\\u043D\\u0442/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(_ref){var url=_ref.url,headers=_ref.headers;_classCallCheck(this,Api);this._url=url;this._headers=headers;}// Обработка ответа сервера\n_createClass(Api,[{key:\"_getStatus\",value:function _getStatus(res){if(res.ok){return res.json();}else{return Promise.reject(\"Error! : \".concat(res.status));}}},{key:\"getServerData\",value:function getServerData(){return Promise.all([this.getUserInfo(),this.getInitialCards()]);}// Обновить аватар\n},{key:\"updateAvatar\",value:function updateAvatar(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._getStatus);}// Запросить информацию о пользователе\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(this._getStatus);}// Обновить информацию о пользователе\n},{key:\"setUserInfo\",value:function setUserInfo(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(this._getStatus);}// Запросить карточки\n},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{method:'GET',headers:this._headers}).then(this._getStatus);}// Загрузить карточку на сервер\n},{key:\"addCard\",value:function addCard(card){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:card.name,link:card.link})}).then(this._getStatus);}// Удалить карточку\n},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._getStatus);}// Лайк карточки\n},{key:\"likeCard\",value:function likeCard(id,like){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:like?'PUT':'DELETE',headers:this._headers}).then(this._getStatus);}}]);return Api;}();export var api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-23',headers:{authorization:'59fccf9e-6799-435b-80d6-745d3115e9a3','Content-Type':'application/json'}});","map":{"version":3,"sources":["/Users/boev/Desktop/Яндекс.Практикум/10 спринт/mesto-react/src/utils/api.js"],"names":["Api","url","headers","_url","_headers","res","ok","json","Promise","reject","status","all","getUserInfo","getInitialCards","data","fetch","method","body","JSON","stringify","avatar","then","_getStatus","name","about","card","link","cardId","id","like","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ url, headers }) {\n    this._url = url\n    this._headers = headers\n  }\n\n  // Обработка ответа сервера\n  _getStatus(res) {\n    if (res.ok) {\n      return res.json()\n    } else {\n      return Promise.reject(`Error! : ${res.status}`)\n    }\n  }\n\n  getServerData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()])\n  }\n\n  // Обновить аватар\n  updateAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._getStatus)\n  }\n\n  // Запросить информацию о пользователе\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    }).then(this._getStatus)\n  }\n\n  // Обновить информацию о пользователе\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then(this._getStatus)\n  }\n\n  // Запросить карточки\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._getStatus)\n  }\n\n  // Загрузить карточку на сервер\n  addCard(card) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link,\n      }),\n    }).then(this._getStatus)\n  }\n\n  // Удалить карточку\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._getStatus)\n  }\n\n  // Лайк карточки\n  likeCard(id, like) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: like ? 'PUT' : 'DELETE',\n      headers: this._headers,\n    }).then(this._getStatus)\n  }\n}\n\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: '59fccf9e-6799-435b-80d6-745d3115e9a3',\n    'Content-Type': 'application/json',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}